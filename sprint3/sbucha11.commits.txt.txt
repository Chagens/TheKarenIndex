a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  15) class Analyzer():
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  16)     def __init__(self) -> None:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  17)         pass
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  18) 
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400  19)     # This currently assumes the reviews are split into an array 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  20)     def analyze_review(self, review_arr):
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  21)         
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  22)         # Words that will score higher for the angry category
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  23)         angry = word_library.angry
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  24) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  25)         # Words that will score for general angry category
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  26)         negative = word_library.negative_words
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  27) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  28)         # Words that will score for the likelihood of scam category
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  29)         scam = word_library.scam
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  30) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  31)         # Words that should be avoided when calculating any particular category because they are acronyms associated with a company
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  32)         acronyms = ["UPS"]
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  33)         parsed_review = ""
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  34)         
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  35)         spell = SpellChecker()
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  36)         num_reviews = 0
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400  37)         score_dict = {}
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  38) 
40410359 (SamaraBuchanan 2022-04-20 17:53:09 -0400  39)         # Iterating through every review
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  40)         for review in review_arr:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  41)             #num_words = 0
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  42)             num_angry_words = 0
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  43)             num_misspells = 0
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  44)             num_scam_words = 0
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  45)             num_caps = 0
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  46)             total_words = 0
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  47)             num_reviews += 1
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  48) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  49)             words_found = []
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400  50)             review_scores = []
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  51) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  52)             # Removing all symbols that could interfere with string analysis, i.e. the following symbols:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  53)             # . , ( ) $ \ / " # ? ! * - &
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  54)             for word in review.split():
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  55)                 word = re.sub(r"\(|\)|\.|\,|\$|\"|\/|\\|\#|\?|\!|\*", "", word)
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  56)                 word = re.sub(r"\-|\&", " ", word)
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  57)                 parsed_review += word
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  58)                 parsed_review += " "
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  59)             #print(parsed_review)
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  60) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  61)             # Finding misspelled words
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  62)             misspelled = spell.unknown(parsed_review.split())
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  63)             for misspelled_word in misspelled:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  64)                 num_misspells += 1
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400  65)             #print(misspelled)
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  66) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  67)             # Finding angry words
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  68)             for word in angry:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  69)                 if word in parsed_review:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  70)                     num_angry_words += 2
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  71)                     words_found.append(word)
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  72) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  73)             # Finding generally negative words
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  74)             for word in negative:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  75)                 if word in parsed_review:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  76)                     num_angry_words += 1
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  77)                     words_found.append(word)
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  78) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  79)             # Finding words that could indicate a scam
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  80)             for word in scam:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  81)                 if word in parsed_review:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  82)                     num_scam_words += 1
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  83)                     words_found.append(word)
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  84) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  85)             # Finding words that consist of all capital letters 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  86)             for word in parsed_review.split():
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  87)                 total_words += 1
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  88)                 if word.isupper() and word != "I" and word not in acronyms:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  89)                     words_found.append(word)
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  90)                     num_caps += 1
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  91) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  92)             # Beginning of scoring process, will probably expanded upon/moved into a separate function later
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  93)             angry_score = num_angry_words/total_words * 500
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  94)             scam_score = num_scam_words/total_words * 500
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  95)             misspell_score = num_misspells/total_words * 500
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  96)             length_score = 0
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  97) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  98)             if len(review) <= 200:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400  99)                 scam_score += 1
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 100)             if len(review) >= 2000 and len(review) < 5000:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 101)                 angry_score += 1
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 102)                 length_score += 2
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 103)             if len(review) >= 5000 and len(review) < 10000:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 104)                 angry_score += 2
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 105)                 length_score += 3
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 106)             if len(review) >= 10000:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 107)                 angry_score += 3
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 108)                 length_score += 7
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 109) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 110)             if angry_score > 10:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 111)                 angry_score = 10
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 112) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 113)             if scam_score > 10:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 114)                 scam_score = 10
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 115) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 116)             if misspell_score > 10:
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 117)                 misspell_score = 10
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 118) 
a051210b (SamaraBuchanan 2022-04-20 17:11:18 -0400 119)             # Testing score calculations
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 120)             # print(f"review {num_reviews}:")
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 121)             # print("Words found to calculate score:")
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 122)             # for word in words_found:
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 123)             #     print(word)
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 124)             # print(f"anger score: {angry_score}")
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 125)             # print(f"scam score: {scam_score}")
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 126)             # print(f"misspell score: {misspell_score}")
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 127)             # print(f"length score: {length_score}")
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 128) 
40410359 (SamaraBuchanan 2022-04-20 17:53:09 -0400 129) 
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 130)             # Dictionary of review score arrays
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 131)             # The dictionary will be keyed on review1, review2, etc.
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 132)             # Each dictionary entry will be an array
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 133)             # Each array will the review scores organized thusly:
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 134)             # angry score, scam score, misspell score, length score
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 135)             review_scores.append(angry_score)
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 136)             review_scores.append(scam_score)
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 137)             review_scores.append(misspell_score)
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 138)             review_scores.append(length_score)
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 139) 
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 140)             score_dict[f"review{num_reviews}"] = review_scores
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 141) 
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 142)         return score_dict
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 143) 
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 144) 
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 145) 
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 146) 
513e0421 (SamaraBuchanan 2022-04-20 17:38:57 -0400 147) 
ab89229c (SamaraBuchanan 2022-04-20 17:44:31 -0400    9)         "www.",
ab89229c (SamaraBuchanan 2022-04-20 17:44:31 -0400   10)         "best I've ever had",
ab89229c (SamaraBuchanan 2022-04-20 17:44:31 -0400   11)         "my life will never be the same",
